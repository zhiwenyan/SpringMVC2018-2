<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">



	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.steven.springmvc.crud"></context:component-scan>


	<!-- 配置视图解析器 -->
	<bean id="internalResourceViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 
	可以在 SpringMVC 的配置文件中配置 <mvc:default-servlet-handler/> 的方式解决静态资源的问题：
	– <mvc:default-servlet-handler/> 将在 SpringMVC 上下文中定义一个
	DefaultServletHttpRequestHandler，它会对进入 DispatcherServlet 的
	请求进行筛查，如果发现是没有经过映射的请求，就将该请求交由 WEB
	应用服务器默认的 Servlet 处理，如果不是静态资源的请求，才由
	DispatcherServlet 继续处理
	– 一般 WEB 应用服务器默认的 Servlet 的名称都是 default。若所使用的
	WEB 服务器的默认 Servlet 名称不是 default，则需要通过 default-servlet-name 属性显式指定
	 -->
	<mvc:default-servlet-handler/>
	<mvc:annotation-driven></mvc:annotation-driven>

</beans>
